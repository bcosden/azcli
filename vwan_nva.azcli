# Check subscription (only whitelisted subs will work)
az account set -s bb0a98e0-34e3-40d1-856f-899c5203df01

# Variables
nva_rg=josenva
location=westcentralus
vwan_name=josevwan
vhub_name=josehub
vhub_space=192.168.0.0/16
nva_name=josenva
nva_location=westcentralus
gnva_cloudinit="/tmp/nva-cloudinit.txt"
username=$(whoami)
public_ssh_key=$(more ~/.ssh/id_rsa.pub)

# Create RG, VWAN and Vhub
az group create -n $nva_rg -l $location
az network vwan create -n $vwan_name -l $location -g $nva_rg
az network vhub create --vwan $vwan_name -n $vhub_name --address-prefix $vhub_space -l $location -g $nva_rg
hub_id=$(az network vhub show -n $vhub_name -g $nva_rg --query id -o tsv)

#######################
# Deploy NVA with CLI #
#######################

# NVA
cat <<EOF > $gnva_cloudinit
#cloud-config
users:
  - default
  - name: $username
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh-authorized-keys:
     - $public_ssh_key
packages:
  - jq
EOF
cloudinit_string=$(cat $gnva_cloudinit | python3 -c 'import json, sys; print( json.dumps( sys.stdin.read() ) )')
az network virtual-appliance create -n $nva_name -g $nva_rg \
     --scale-unit 2 \
     --vendor Contoso_generic_test_nva \
     --version latest \
     --vhub $hub_id \
     --asn 65100 \
     --init-config $cloudinit_string \
     --tags tagExample="xyz"
# Diagnostics
az network virtual-appliance list --query '[].{Name:name,ResourceGroup:resourceGroup,ProvisioningState:provisioningState,AddressPrefix:addressPrefix}' -o table
pip1=$(az network virtual-appliance show -n $nva_name -g $nva_rg --query 'virtualApplianceNics[1].publicIpAddress' -o tsv) && echo $pip1
pip2=$(az network virtual-appliance show -n $nva_name -g $nva_rg --query 'virtualApplianceNics[3].publicIpAddress' -o tsv) && echo $pip2
az network virtual-appliance show -n $nva_name -g $nva_rg --query cloudInitConfiguration -o tsv
nva_id=$(az network virtual-appliance show -n $nva_name -g $nva_rg --query id -o tsv)
# SSH
ssh -n -o StrictHostKeyChecking=no -o BatchMode=yes "$pip2" "ip a"
# Cleanup
az network virtual-appliance delete -n $nva_name -g $nva_rg -y

######################
# Powershell command #
######################

$nva_rg = "josenva"
$nva_name = "josenva-pwsh"
$nva_location = "westcentralus"
$vhub_name = "josehub"
$vhub_id = $(get-azvirtualhub -resourcegroupname $nva_rg -name $vhub_name).id
$cloudinit_string = "#!/bin/bash\nuseradd -m jose\necho \"jose:Microsoft123!\" | chpasswd \n"
New-AzNetworkVirtualAppliance -Name $nva_name -ResourceGroupName $nva_rg `
  -CloudInitConfiguration $cloudinit_string `
  -Location $nva_location
  -Sku <Microsoft.Azure.Commands.Network.Models.PSVirtualApplianceSkuProperties> -VirtualHubId $vhub_id

##############################
# Creating NVA over REST API #
##############################

# REST
cloudinit_string=$(cat $gnva_cloudinit | python3 -c 'import json, sys; print( json.dumps( sys.stdin.read() ) )')
json_payload='{
  "properties": {
    "nvaSku": {
      "vendor": "Contoso_generic_test_nva",
      "bundledScaleUnit": "2",
      "marketPlaceVersion": "latest"
    },
    "virtualHub": {
      "id": "'$hub_id'"
    },
    "virtualApplianceAsn": 65100,
    "cloudInitConfiguration": '$cloudinit_string'
  },
  "location": "'$location'",
  "tags": {
    "tagexample1": "tagvalue1"
  }
}'
uri="/subscriptions/bb0a98e0-34e3-40d1-856f-899c5203df01/resourceGroups/${nva_rg}/providers/Microsoft.Network/NetworkVirtualAppliances/${nva_name}?api-version=2021-02-01"
az rest --method PUT --uri $uri --body $json_payload


# Some other REST calls
subscription_id=$(az account show --query id -o tsv)
api_version=2021-02-01
hub_rg=$(az network vhub list --query '[0].resourceGroup' -o tsv) && echo $hub_rg
# List NVA SKUs (not working: NOT FOUND)
url="https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${nva_rg}/providers/Microsoft.Network/networkVirtualApplianceSKUs?api-version=${api_version}" 
az rest --method GET --url $url
# Show NVA SKU (not working: NOT FOUND)
url="https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${nva_rg}/providers/Microsoft.Network/networkVirtualApplianceSKUs/Contoso_generic_test_nva?api-version=${api_version}" 
az rest --method GET --url $url
# Show NVA
url="https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${nva_rg}/providers/Microsoft.Network/networkVirtualAppliances/${nva_name}?api-version=${api_version}" 
az rest --method GET --url $url

###############################
# Some sample cloudinit files #
###############################

# public SSH key
cat <<EOF > $gnva_cloudinit
#cloud-config
users:
  - default
  - name: $username
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh-authorized-keys:
     - $public_ssh_key
packages:
  - jq
EOF

# New user/password
cat <<EOF > $gnva_cloudinit
#!/bin/bash
apt install -y jq
useradd -m $username
echo "$username:Microsoft123!" | chpasswd $username
usermod -aG sudo $username
host_name=\$(curl -s -H Metadata:true "http://169.254.169.254/metadata/instance?api-version=2020-09-01" | jq -r '.compute.name')
if [[ "\${host_name: -1}" == "0" ]]; then echo "\${HOSTNAME}-0123456789" > ~/license.txt; else echo "\${HOSTNAME}-9876543210" > ~/license.txt; fi
EOF


